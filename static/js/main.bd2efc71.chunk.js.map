{"version":3,"sources":["constant/index.ts","components/component/index.tsx","components/element/index.tsx","components/form/index.tsx","components/sort/index.tsx","components/reciver-element/index.tsx","components/reciver-main/index.tsx","utils/swap.ts","pages/jigsaw/index.tsx","App.tsx","serviceWorker.ts","index.tsx","components/reciver-main/index.module.css","components/reciver-element/index.module.css","components/component/index.module.css","components/element/index.module.css","pages/jigsaw/index.module.css","components/form/index.module.css","components/sort/index.module.css"],"names":["JigsawComponents","JigsawElements","Component","props","useDrag","item","name","type","end","monitor","dropResult","getDropResult","onEnd","collect","isDragging","drag","ref","className","style","children","Element","Form","render","Banner","Card","placeholder","Goods","Text","RestCell","onClick","onConfirm","JigsawComponentsRecive","Swiper","multiple","elements","Block","Line","Title","Sort","index","move","useRef","useDrop","accept","Object","keys","acceptType","hover","current","dragIndex","hoverIndex","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","bottom","top","hoverClientY","getClientOffset","y","drop","ReciverElement","componentType","isOver","canDrop","handleMove","onElementMove","componentIndex","value","map","key","onElementSelect","elementIndex","elementType","desc","img","ReciverMain","__key","onComponentMove","swap","arr","immer","draft","dragVal","hoverVal","Jigsaw","useState","edit","setEdit","setArr","handleComponentDropEnd","newArr","Date","getTime","filter","handleElementDropEnd","result","componentIype","oldItems","components","DndProvider","backend","HTML5Backend","params","console","log","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.bd2efc71.chunk.js","sourcesContent":["// 组件\nexport enum JigsawComponents {\n  Swiper = \"Swiper\",\n  Block = \"Block\",\n  Line = \"Line\",\n  Title = \"Title\",\n}\n\n// 元素\nexport enum JigsawElements {\n  Goods = \"Goods\",\n  Card = \"Card\",\n  Banner = \"Banner\",\n  Text = \"Text\",\n}\n\n// 组件接受的元素\nexport const JigsawComponentsRecive = {\n  [JigsawComponents.Swiper]: {\n    multiple: true,\n    elements: [JigsawElements.Banner, JigsawElements.Card],\n  },\n  [JigsawComponents.Block]: {\n    multiple: true,\n    elements: [JigsawElements.Goods],\n  },\n  [JigsawComponents.Line]: {\n    multiple: true,\n    elements: [JigsawElements.Goods],\n  },\n  [JigsawComponents.Title]: {\n    multiple: false,\n    elements: [JigsawElements.Text],\n  },\n};\n","import React from \"react\";\nimport {DragSourceMonitor, useDrag} from \"react-dnd\";\nimport style from \"./index.module.css\";\n\ninterface Props {\n  name: string;\n  onEnd: (item: any, dropResult: any) => any;\n}\n\nconst Component: React.FC<Props> = (props) => {\n  const [, drag] = useDrag({\n    item: {name: props.name, type: props.name},\n    end: (item: {name: string} | undefined, monitor: DragSourceMonitor) => {\n      const dropResult = monitor.getDropResult();\n      if (item && dropResult) {\n        props.onEnd(item, dropResult);\n      }\n    },\n    collect: (monitor) => ({\n      isDragging: monitor.isDragging(),\n    }),\n  });\n\n  return (\n    <div ref={drag} className={style[\"component\"]}>\n      <button className={style[\"btn\"]}>{props.children}</button>\n    </div>\n  );\n};\n\nexport default Component;\n","import React from \"react\";\nimport {DragSourceMonitor, useDrag} from \"react-dnd\";\nimport style from \"./index.module.css\";\n\ninterface Props {\n  name: string;\n  onEnd: (item: any, dropResult: any) => any;\n}\n\nconst Element: React.FC<Props> = (props) => {\n  const [, drag] = useDrag({\n    item: {name: props.name, type: props.name},\n    end: (item: {name: string} | undefined, monitor: DragSourceMonitor) => {\n      const dropResult = monitor.getDropResult();\n      if (item && dropResult) {\n        props.onEnd(item, dropResult);\n      }\n    },\n    collect: (monitor) => ({\n      isDragging: monitor.isDragging(),\n    }),\n  });\n\n  return (\n    <div ref={drag} className={style[\"component\"]}>\n      <button className={style[\"btn\"]}>{props.children}</button>\n    </div>\n  );\n};\n\nexport default Element;\n","import React from \"react\";\nimport {JigsawElements} from \"../../constant\";\n\nimport style from \"./index.module.css\";\n\ninterface Props {\n  type: JigsawElements;\n  onConfirm: (form: any) => any;\n}\n\nconst Form: React.FC<Props> = (props) => {\n  const map: Record<JigsawElements, any> = {\n    Banner: () => {\n      return null;\n    },\n    Card: () => {\n      return (\n        <div>\n          <input placeholder='请输入会员卡id' type='text' className='val' />\n        </div>\n      );\n    },\n    Goods: () => {\n      return (\n        <div>\n          <input placeholder='请输入商品id' type='text' className='val' />\n        </div>\n      );\n    },\n    Text: () => {\n      return (\n        <div>\n          <input placeholder='请输入文案' type='text' className='val' />\n        </div>\n      );\n    },\n  };\n\n  const render = map[props.type];\n\n  const RestCell = typeof render === \"function\" ? render() : null;\n\n  return (\n    <div className={style[\"page\"]}>\n      <div className='cell'>\n        <input placeholder='请输入名称' type='text' className='val' />\n        <input placeholder='请输入描述' type='text' className='val' />\n        <input placeholder='请输入图片' type='text' className='val' />\n        <input placeholder='请输入链接' type='text' className='val' />\n      </div>\n      <div>{RestCell}</div>\n      <button onClick={props.onConfirm}>更新</button>\n    </div>\n  );\n};\n\nexport default Form;\n","import React, {useRef} from \"react\";\nimport {useDrag, useDrop} from \"react-dnd\";\nimport {JigsawComponents, JigsawElements} from \"../../constant\";\nimport style from \"./index.module.css\";\n\nexport const Sort: React.FC<{\n  index: number;\n  move: (dragIndex: number, hoverIndex: number) => any;\n  type: JigsawElements | JigsawComponents;\n  acceptType: any; // JigsawElements | JigsawComponents\n}> = (props) => {\n  const {index, move} = props;\n\n  const ref = useRef<any>(null);\n  const [, drop] = useDrop({\n    accept: Object.keys(props.acceptType),\n    hover(item: any, monitor: any) {\n      if (!ref.current) {\n        return;\n      }\n      const dragIndex = item.index;\n      const hoverIndex = index;\n      if (dragIndex === hoverIndex) {\n        return;\n      }\n      const hoverBoundingRect = ref.current?.getBoundingClientRect();\n      const hoverMiddleY =\n        (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\n      const clientOffset = monitor.getClientOffset();\n      const hoverClientY = clientOffset.y - hoverBoundingRect.top;\n      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n        return;\n      }\n      if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n        return;\n      }\n      move(dragIndex, hoverIndex);\n      item.index = hoverIndex;\n    },\n  });\n\n  const [, drag] = useDrag({\n    item: {type: props.type, index},\n    collect: (monitor) => ({\n      isDragging: monitor.isDragging(),\n    }),\n  });\n\n  drag(drop(ref));\n  return (\n    <div ref={ref} className={style[\"position\"]}>\n      {props.children}\n    </div>\n  );\n};\n","import {Banner, Block, Line, Title, AppointLayout} from \"dd-ui\";\nimport React from \"react\";\nimport {useDrop} from \"react-dnd\";\nimport {\n  JigsawComponents,\n  JigsawComponentsRecive,\n  JigsawElements,\n} from \"../../constant\";\nimport {Sort} from \"../sort\";\nimport style from \"./index.module.css\";\n\ninterface Props {\n  value: {type: JigsawElements}[];\n  index: number;\n  componentType: JigsawComponents;\n  onElementMove: (params: {\n    componentIndex: number;\n    dragIndex: number;\n    hoverIndex: number;\n  }) => any;\n  onElementSelect: (params: {\n    elementIndex: number;\n    elementType: JigsawElements;\n  }) => any;\n}\n\nconst ReciverElement: React.FC<Props> = (props) => {\n  const [, drop] = useDrop({\n    accept: JigsawComponentsRecive[props.componentType].elements,\n    drop: () => {\n      return {\n        index: props.index,\n        name: \"ReciverElement\",\n      };\n    },\n    collect: (monitor) => ({\n      isOver: monitor.isOver(),\n      canDrop: monitor.canDrop(),\n    }),\n  });\n\n  const handleMove = (dragIndex: number, hoverIndex: number) => {\n    props.onElementMove({\n      componentIndex: props.index,\n      dragIndex: dragIndex,\n      hoverIndex: hoverIndex,\n    });\n  };\n\n  return (\n    <div ref={drop} className={style[\"component\"]}>\n      <div className={style[\"box\"]}>\n        <AppointLayout componentType={props.componentType}>\n          {props.value.map((item, index) =>\n            !!item ? (\n              <Sort\n                key={`${item.type}-${index}`}\n                index={index}\n                type={item.type}\n                move={handleMove}\n                acceptType={JigsawElements}\n              >\n                <div\n                  className={style[\"item\"]}\n                  onClick={() =>\n                    props.onElementSelect({\n                      elementIndex: index,\n                      elementType: item.type,\n                    })\n                  }\n                >\n                  {props.componentType === JigsawComponents.Title && (\n                    <Title\n                      name={`组件：${props.componentType} / 元素：${item.type}`}\n                      desc={`组件：${props.componentType} / 元素：${item.type}`}\n                    />\n                  )}\n                  {props.componentType === JigsawComponents.Line && (\n                    <Line\n                      name={`组件：${props.componentType} / 元素：${item.type}`}\n                      desc={`组件：${props.componentType} / 元素：${item.type}`}\n                      img='https://interest-image-dev.billbear.cn/dev/GOODS/tn-iEEAi-2tPTbMjX9CmotygqJ55YAx_08-x4WrFFPs=@big'\n                    />\n                  )}\n                  {props.componentType === JigsawComponents.Block && (\n                    <Block\n                      name={`组件：${props.componentType} / 元素：${item.type}`}\n                      desc={`组件：${props.componentType} / 元素：${item.type}`}\n                      img='https://interest-image-dev.billbear.cn/dev/GOODS/tn-iEEAi-2tPTbMjX9CmotygqJ55YAx_08-x4WrFFPs=@big'\n                    />\n                  )}\n                  {props.componentType === JigsawComponents.Swiper && (\n                    <Banner\n                      name={`组件：${props.componentType} / 元素：${item.type}`}\n                      desc={`组件：${props.componentType} / 元素：${item.type}`}\n                      img='https://interest-image-dev.billbear.cn/dev/GOODS/tn-iEEAi-2tPTbMjX9CmotygqJ55YAx_08-x4WrFFPs=@big'\n                    />\n                  )}\n                </div>\n              </Sort>\n            ) : null\n          )}\n        </AppointLayout>\n      </div>\n    </div>\n  );\n};\n\nexport default ReciverElement;\n","import React from \"react\";\nimport {useDrop} from \"react-dnd\";\nimport {JigsawComponents, JigsawElements} from \"../../constant\";\nimport ReciverElement from \"../reciver-element\";\nimport {Sort} from \"../sort\";\nimport style from \"./index.module.css\";\n\ninterface Props {\n  value: {\n    type: JigsawComponents;\n    __key: number;\n    value: {\n      type: JigsawElements;\n      __key: number;\n      [key: string]: any;\n    }[];\n  }[];\n  onElementMove: (params: {\n    componentIndex: number;\n    dragIndex: number;\n    hoverIndex: number;\n  }) => any;\n  onElementSelect: (params: {\n    elementIndex: number;\n    componentIndex: number;\n    elementType: JigsawElements;\n  }) => any;\n  onComponentMove: (params: {\n    componentIndex: number;\n    dragIndex: number;\n    hoverIndex: number;\n  }) => any;\n}\n\nconst ReciverMain: React.FC<Props> = (props) => {\n  const [, drop] = useDrop({\n    accept: Object.keys(JigsawComponents),\n    drop: () => {\n      return {name: \"ReciverMain\"};\n    },\n    collect: (monitor) => {\n      return {\n        isOver: monitor.isOver(),\n        canDrop: monitor.canDrop(),\n      };\n    },\n  });\n\n  return (\n    <div ref={drop} className={style[\"component\"]}>\n      <div className={style[\"box\"]}>\n        {props.value.map((item, index) =>\n          !!item ? (\n            <Sort\n              key={item.__key}\n              index={index}\n              type={item.type}\n              acceptType={JigsawComponents}\n              move={(dragIndex, hoverIndex) =>\n                props.onComponentMove({\n                  componentIndex: index,\n                  dragIndex: dragIndex,\n                  hoverIndex: hoverIndex,\n                })\n              }\n            >\n              <div className={style[\"elementWrapper\"]}>\n                {item.type}\n                <div className={style[\"item\"]}>\n                  <ReciverElement\n                    index={index}\n                    componentType={item.type}\n                    value={item.value || []}\n                    onElementMove={props.onElementMove}\n                    onElementSelect={({elementIndex, elementType}) =>\n                      props.onElementSelect({\n                        elementIndex: elementIndex,\n                        elementType: elementType,\n                        componentIndex: index,\n                      })\n                    }\n                  />\n                </div>\n              </div>\n            </Sort>\n          ) : null\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ReciverMain;\n","import immer from \"immer\";\n\nexport function swap<T extends any[]>(\n  arr: T,\n  dragIndex: number,\n  hoverIndex: number\n) {\n  const newArr = immer(arr, (draft) => {\n    const dragVal = draft[dragIndex];\n    const hoverVal = draft[hoverIndex];\n    draft[dragIndex] = hoverVal;\n    draft[hoverIndex] = dragVal;\n  });\n\n  return newArr;\n}\n","import immer from \"immer\";\nimport React, {useState} from \"react\";\nimport {DndProvider} from \"react-dnd\";\nimport {HTML5Backend} from \"react-dnd-html5-backend\";\nimport Component from \"../../components/component\";\nimport Element from \"../../components/element\";\nimport Form from \"../../components/form\";\nimport ReciverMain from \"../../components/reciver-main\";\nimport {\n  JigsawComponents,\n  JigsawComponentsRecive,\n  JigsawElements,\n} from \"../../constant\";\nimport {swap} from \"../../utils/swap\";\nimport style from \"./index.module.css\";\n\nconst Jigsaw = () => {\n  const [edit, setEdit] = useState(\n    {} as {\n      elementIndex: number;\n      componentIndex: number;\n      elementType: JigsawElements;\n    }\n  );\n\n  const [arr, setArr] = useState<\n    {\n      value: {\n        type: JigsawElements;\n        __key: number;\n        [key: string]: any;\n      }[];\n      type: JigsawComponents;\n      __key: number;\n    }[]\n  >([]);\n\n  const handleComponentDropEnd = (item: any, dropResult: any) => {\n    const newArr = immer(arr, (draft) => {\n      return [\n        ...draft,\n        {\n          ...item,\n          __key: new Date().getTime(),\n        },\n      ];\n    });\n\n    setArr(newArr.filter((item) => !!item));\n  };\n\n  const handleElementDropEnd = (\n    item: {name: string; type: JigsawElements},\n    result: {index: number}\n  ) => {\n    const componentIype = arr[result.index].type;\n    const multiple = JigsawComponentsRecive[componentIype].multiple;\n\n    const newArr = immer(arr, (draft) => {\n      if (!multiple) {\n        draft[result.index].value = [\n          {\n            ...item,\n            __key: new Date().getTime(),\n          },\n        ];\n        return draft;\n      }\n\n      const oldItems = arr[result.index].value || [];\n      const value = [\n        ...oldItems,\n        {\n          ...item,\n          __key: new Date().getTime(),\n        },\n      ];\n      draft[result.index].value = value;\n      return draft;\n    });\n\n    setArr(newArr.filter((item) => !!item));\n  };\n\n  const components = [\n    {\n      Element: (\n        <Component\n          name={JigsawComponents.Swiper}\n          onEnd={handleComponentDropEnd}\n        >\n          {JigsawComponents.Swiper}\n        </Component>\n      ),\n    },\n    {\n      Element: (\n        <Component name={JigsawComponents.Title} onEnd={handleComponentDropEnd}>\n          {JigsawComponents.Title}\n        </Component>\n      ),\n    },\n    {\n      Element: (\n        <Component name={JigsawComponents.Block} onEnd={handleComponentDropEnd}>\n          {JigsawComponents.Block}\n        </Component>\n      ),\n    },\n    {\n      Element: (\n        <Component name={JigsawComponents.Line} onEnd={handleComponentDropEnd}>\n          {JigsawComponents.Line}\n        </Component>\n      ),\n    },\n  ];\n\n  const elements = [\n    {\n      Element: (\n        <Element name={JigsawElements.Banner} onEnd={handleElementDropEnd}>\n          {JigsawElements.Banner}\n        </Element>\n      ),\n    },\n    {\n      Element: (\n        <Element name={JigsawElements.Card} onEnd={handleElementDropEnd}>\n          {JigsawElements.Card}\n        </Element>\n      ),\n    },\n    {\n      Element: (\n        <Element name={JigsawElements.Goods} onEnd={handleElementDropEnd}>\n          {JigsawElements.Goods}\n        </Element>\n      ),\n    },\n    {\n      Element: (\n        <Element name={JigsawElements.Text} onEnd={handleElementDropEnd}>\n          {JigsawElements.Text}\n        </Element>\n      ),\n    },\n  ];\n\n  const handleElementSelect = (params: {\n    elementIndex: number;\n    elementType: JigsawElements;\n    componentIndex: number;\n  }) => {\n    setEdit({\n      componentIndex: params.componentIndex,\n      elementIndex: params.elementIndex,\n      elementType: params.elementType,\n    });\n\n    console.log(params);\n  };\n\n  const handleComponentMove = (params: {\n    componentIndex: number;\n    dragIndex: number;\n    hoverIndex: number;\n  }) => {\n    const {dragIndex, hoverIndex} = params;\n    if (typeof dragIndex !== \"number\" || typeof hoverIndex !== \"number\") {\n      return;\n    }\n    setArr(swap(arr, dragIndex, hoverIndex));\n  };\n\n  const handleElementMove = (params: {\n    componentIndex: number;\n    dragIndex: number;\n    hoverIndex: number;\n  }) => {\n    const {componentIndex, dragIndex, hoverIndex} = params;\n\n    if (typeof dragIndex !== \"number\" || typeof hoverIndex !== \"number\") {\n      return;\n    }\n\n    setArr(\n      immer(arr, (draft) => {\n        draft[componentIndex].value = swap(\n          arr[componentIndex].value,\n          dragIndex,\n          hoverIndex\n        );\n      })\n    );\n  };\n\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <div className={style[\"page\"]}>\n        <div className={style[\"layout\"]}>\n          <div className={style[\"operater\"]}>\n            <div className={style[\"components\"]}>\n              {components.map((item, index) => (\n                <div key={index}>{item.Element}</div>\n              ))}\n            </div>\n            <div className={style[\"elements\"]}>\n              {elements.map((item, index) => (\n                <div key={index}>{item.Element}</div>\n              ))}\n            </div>\n          </div>\n\n          <div className={style[\"preview\"]}>\n            <div className={style[\"json\"]}>\n              <ReciverMain\n                value={arr}\n                onElementMove={handleElementMove}\n                onElementSelect={handleElementSelect}\n                onComponentMove={handleComponentMove}\n              />\n            </div>\n          </div>\n          <div className={style[\"form\"]}>\n            <Form type={edit.elementType} onConfirm={console.log}></Form>\n          </div>\n        </div>\n      </div>\n    </DndProvider>\n  );\n};\n\nexport default Jigsaw;\n","import React from \"react\";\n\nimport Jigsaw from \"./pages/jigsaw\";\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Jigsaw></Jigsaw>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"reciver-main_box__Te1-j\",\"item\":\"reciver-main_item__33peM\",\"elementWrapper\":\"reciver-main_elementWrapper__389OI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"reciver-element_box__F0elu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"component_btn__3xI-F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"element_btn__2MCOl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout\":\"jigsaw_layout__c2xAh\",\"form\":\"jigsaw_form__1Io7R\",\"operater\":\"jigsaw_operater__113OR\",\"preview\":\"jigsaw_preview__3BObr\",\"components\":\"jigsaw_components__2p1N8\",\"elements\":\"jigsaw_elements__-dPss\",\"iframe\":\"jigsaw_iframe__2MOlz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"form_page__3mMIE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"position\":\"sort_position__1Fv_-\",\"move\":\"sort_move__2x9ou\"};"],"sourceRoot":""}