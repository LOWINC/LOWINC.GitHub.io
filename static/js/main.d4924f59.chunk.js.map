{"version":3,"sources":["components/reciver-main/index.module.css","components/form/index.module.css","components/reciver-element/index.module.css","components/component/index.module.css","components/element/index.module.css","components/sort/index.module.css","pages/jigsaw/index.module.css","constant/index.ts","components/sort/index.tsx","components/reciver-element/index.tsx","components/reciver-main/index.tsx","utils/cache.ts","components/component/index.tsx","pages/jigsaw/jigsaw-components.tsx","components/element/index.tsx","pages/jigsaw/jigsaw-elements.tsx","components/form/banner.tsx","components/form/card.tsx","components/form/goods.tsx","components/form/text.tsx","pages/jigsaw/jigsaw-elements-form.tsx","pages/jigsaw/index.tsx","utils/postmessage.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","JigsawComponentsRecive","JigsawComponents","Swiper","multiple","elements","JigsawElements","Card","Block","Goods","Line","Banner","Title","Text","Sort","props","index","move","ref","useRef","useDrop","accept","Object","keys","acceptType","hover","item","monitor","current","dragIndex","hoverIndex","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","bottom","top","hoverClientY","getClientOffset","y","drop","useDrag","type","collect","isDragging","drag","className","style","children","ReciverElement","componentType","name","isOver","canDrop","handleMove","onElementMove","componentIndex","value","map","key","onClick","onElementSelect","elementIndex","elementType","get","desc","img","ReciverMain","__key","onComponentMove","useCache","dragArr","useState","data","setData","useEffect","localStorage","getItem","JSON","parse","error","getCache","console","log","length","setItem","stringify","clear","Component","end","dropResult","getDropResult","onEnd","RenderJigsawComponents","handleComponentDropEnd","components","Element","RenderJigsawElement","handleElementDropEnd","FormBanner","form","setForm","handleChange","event","target","title","placeholder","onChange","link","onSubmit","FormCard","vipCardId","FormGoods","goodsId","FormText","JigsawElementForm","iframe","postMessage","action","contentWindow","find","id","document","getElementById","postData","payload","postEvent","Jigsaw","arr","setArr","edit","setEdit","editData","useMemo","cache","DndProvider","backend","HTML5Backend","newArr","immer","draft","Date","getTime","filter","result","undefined","componentIype","oldItems","params","swap","src","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.d4924f59.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"reciver-main_box__Te1-j\",\"item\":\"reciver-main_item__33peM\",\"elementWrapper\":\"reciver-main_elementWrapper__389OI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form-cell\":\"form_form-cell__1ji9n\",\"form-label\":\"form_form-label__3h0FD\",\"form-value\":\"form_form-value__uMANL\",\"submit\":\"form_submit__28v-7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"reciver-element_box__F0elu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"component_btn__3xI-F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"element_btn__2MCOl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"position\":\"sort_position__1Fv_-\",\"move\":\"sort_move__2x9ou\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout\":\"jigsaw_layout__c2xAh\",\"form\":\"jigsaw_form__1Io7R\",\"operater\":\"jigsaw_operater__113OR\",\"preview\":\"jigsaw_preview__3BObr\",\"components\":\"jigsaw_components__2p1N8\",\"elements\":\"jigsaw_elements__-dPss\",\"iframe\":\"jigsaw_iframe__2MOlz\",\"reset\":\"jigsaw_reset__2oXwJ\"};","import {JigsawComponents, JigsawElements} from \"dd-lib\";\n\n// 组件 元素\nexport {JigsawComponents, JigsawElements};\n\n// 组件接受的元素\nexport const JigsawComponentsRecive = {\n  [JigsawComponents.Swiper]: {\n    multiple: true,\n    elements: [JigsawElements.Card],\n  },\n  [JigsawComponents.Block]: {\n    multiple: true,\n    elements: [JigsawElements.Goods],\n  },\n  [JigsawComponents.Line]: {\n    multiple: true,\n    elements: [JigsawElements.Goods, JigsawElements.Banner],\n  },\n  [JigsawComponents.Title]: {\n    multiple: false,\n    elements: [JigsawElements.Text],\n  },\n};\n","import React, {useRef} from \"react\";\nimport {useDrag, useDrop} from \"react-dnd\";\nimport {JigsawComponents, JigsawElements} from \"../../constant\";\nimport style from \"./index.module.css\";\n\nexport const Sort: React.FC<{\n  index: number;\n  move: (dragIndex: number, hoverIndex: number) => any;\n  type: JigsawElements | JigsawComponents;\n  acceptType: any; // JigsawElements | JigsawComponents\n}> = (props) => {\n  const {index, move} = props;\n\n  const ref = useRef<any>(null);\n  const [, drop] = useDrop({\n    accept: Object.keys(props.acceptType),\n    hover(item: any, monitor: any) {\n      if (!ref.current) {\n        return;\n      }\n      const dragIndex = item.index;\n      const hoverIndex = index;\n      if (dragIndex === hoverIndex) {\n        return;\n      }\n      const hoverBoundingRect = ref.current?.getBoundingClientRect();\n      const hoverMiddleY =\n        (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\n      const clientOffset = monitor.getClientOffset();\n      const hoverClientY = clientOffset.y - hoverBoundingRect.top;\n      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n        return;\n      }\n      if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n        return;\n      }\n      move(dragIndex, hoverIndex);\n      item.index = hoverIndex;\n    },\n  });\n\n  const [, drag] = useDrag({\n    item: {type: props.type, index},\n    collect: (monitor) => ({\n      isDragging: monitor.isDragging(),\n    }),\n  });\n\n  drag(drop(ref));\n  return (\n    <div ref={ref} className={style[\"position\"]}>\n      {props.children}\n    </div>\n  );\n};\n","import {AppointLayout, Banner, Block, Line, Title} from \"dd-ui\";\nimport get from \"lodash/get\";\nimport React from \"react\";\nimport {useDrop} from \"react-dnd\";\nimport {\n  JigsawComponents,\n  JigsawComponentsRecive,\n  JigsawElements,\n} from \"../../constant\";\nimport {Sort} from \"../sort\";\nimport style from \"./index.module.css\";\n\ninterface Props {\n  value: {type: JigsawElements}[];\n  index: number;\n  componentType: JigsawComponents;\n  onElementMove: (params: {\n    componentIndex: number;\n    dragIndex: number;\n    hoverIndex: number;\n  }) => any;\n  onElementSelect: (params: {\n    elementIndex: number;\n    elementType: JigsawElements;\n  }) => any;\n}\n\nconst ReciverElement: React.FC<Props> = (props) => {\n  const [, drop] = useDrop({\n    accept: JigsawComponentsRecive[props.componentType].elements,\n    drop: () => {\n      return {\n        index: props.index,\n        name: \"ReciverElement\",\n      };\n    },\n    collect: (monitor) => ({\n      isOver: monitor.isOver(),\n      canDrop: monitor.canDrop(),\n    }),\n  });\n\n  const handleMove = (dragIndex: number, hoverIndex: number) => {\n    props.onElementMove({\n      componentIndex: props.index,\n      dragIndex: dragIndex,\n      hoverIndex: hoverIndex,\n    });\n  };\n\n  return (\n    <div ref={drop} className={style[\"component\"]}>\n      <div className={style[\"box\"]}>\n        <AppointLayout componentType={props.componentType}>\n          {props.value.map((item, index) =>\n            !!item ? (\n              <Sort\n                key={`${item.type}-${index}`}\n                index={index}\n                type={item.type}\n                move={handleMove}\n                acceptType={JigsawElements}\n              >\n                <div\n                  className={style[\"item\"]}\n                  onClick={() =>\n                    props.onElementSelect({\n                      elementIndex: index,\n                      elementType: item.type,\n                    })\n                  }\n                >\n                  {props.componentType === JigsawComponents.Title && (\n                    <Title\n                      name={get(\n                        props.value[index],\n                        \"value.title\",\n                        \"请输入标题\"\n                      )}\n                      desc={get(props.value[index], \"value.desc\")}\n                    />\n                  )}\n                  {props.componentType === JigsawComponents.Line && (\n                    <Line\n                      name={get(props.value[index], \"value.title\")}\n                      desc={get(props.value[index], \"value.desc\")}\n                      img={get(props.value[index], \"value.img\")}\n                    />\n                  )}\n                  {props.componentType === JigsawComponents.Block && (\n                    <Block\n                      name={get(props.value[index], \"value.title\")}\n                      desc={get(props.value[index], \"value.desc\")}\n                      img={get(props.value[index], \"value.img\")}\n                    />\n                  )}\n                  {props.componentType === JigsawComponents.Swiper && (\n                    <Banner img={get(props.value[index], \"value.img\")} />\n                  )}\n                </div>\n              </Sort>\n            ) : null\n          )}\n        </AppointLayout>\n      </div>\n    </div>\n  );\n};\n\nexport default ReciverElement;\n","import {JigsawElementBase} from \"dd-lib\";\nimport React from \"react\";\nimport {useDrop} from \"react-dnd\";\nimport {JigsawComponents, JigsawElements} from \"../../constant\";\nimport ReciverElement from \"../reciver-element\";\nimport {Sort} from \"../sort\";\nimport style from \"./index.module.css\";\n\ninterface Props {\n  value: JigsawElementBase[];\n  onElementMove: (params: {\n    componentIndex: number;\n    dragIndex: number;\n    hoverIndex: number;\n  }) => any;\n  onElementSelect: (params: {\n    elementIndex: number;\n    componentIndex: number;\n    elementType: JigsawElements;\n  }) => any;\n  onComponentMove: (params: {\n    componentIndex: number;\n    dragIndex: number;\n    hoverIndex: number;\n  }) => any;\n}\n\nconst ReciverMain: React.FC<Props> = (props) => {\n  const [, drop] = useDrop({\n    accept: Object.keys(JigsawComponents),\n    drop: () => {\n      return {name: \"ReciverMain\"};\n    },\n    collect: (monitor) => {\n      return {\n        isOver: monitor.isOver(),\n        canDrop: monitor.canDrop(),\n      };\n    },\n  });\n\n  return (\n    <div ref={drop} className={style[\"component\"]}>\n      <div className={style[\"box\"]}>\n        {props.value.map((item, index) =>\n          !!item ? (\n            <Sort\n              key={item.__key}\n              index={index}\n              type={item.type}\n              acceptType={JigsawComponents}\n              move={(dragIndex, hoverIndex) =>\n                props.onComponentMove({\n                  componentIndex: index,\n                  dragIndex: dragIndex,\n                  hoverIndex: hoverIndex,\n                })\n              }\n            >\n              <div className={style[\"elementWrapper\"]}>\n                {item.type}\n                <div className={style[\"item\"]}>\n                  <ReciverElement\n                    index={index}\n                    componentType={item.type}\n                    value={item.value || []}\n                    onElementMove={props.onElementMove}\n                    onElementSelect={({elementIndex, elementType}) =>\n                      props.onElementSelect({\n                        elementIndex: elementIndex,\n                        elementType: elementType,\n                        componentIndex: index,\n                      })\n                    }\n                  />\n                </div>\n              </div>\n            </Sort>\n          ) : null\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ReciverMain;\n","import {useEffect, useState} from \"react\";\n\nexport function useCache<T>(dragArr: T[]) {\n  const [data, setData] = useState<T[]>([]);\n\n  function getCache() {\n    try {\n      const data: any = localStorage.getItem(\"cache-data\") || \"[]\";\n      return JSON.parse(data);\n    } catch (error) {\n      return [];\n    }\n  }\n\n  function clear() {\n    localStorage.setItem(\"cache-data\", JSON.stringify([]));\n    setData([]);\n  }\n\n  useEffect(() => {\n    const data = getCache();\n    console.log(\"data:\", data);\n    setData(data);\n  }, []);\n\n  useEffect(() => {\n    if (dragArr.length === 0) {\n      return;\n    }\n    localStorage.setItem(\"cache-data\", JSON.stringify(dragArr));\n  }, [dragArr]);\n\n  return {\n    data,\n    clear,\n  };\n}\n","import React from \"react\";\nimport {DragSourceMonitor, useDrag} from \"react-dnd\";\nimport style from \"./index.module.css\";\n\ninterface Props {\n  name: string;\n  onEnd: (item: any, dropResult: any) => any;\n}\n\nconst Component: React.FC<Props> = (props) => {\n  const [, drag] = useDrag({\n    item: {name: props.name, type: props.name},\n    end: (item: {name: string} | undefined, monitor: DragSourceMonitor) => {\n      const dropResult = monitor.getDropResult();\n      if (item && dropResult) {\n        props.onEnd(item, dropResult);\n      }\n    },\n    collect: (monitor) => ({\n      isDragging: monitor.isDragging(),\n    }),\n  });\n\n  return (\n    <div ref={drag} className={style[\"component\"]}>\n      <button className={style[\"btn\"]}>{props.children}</button>\n    </div>\n  );\n};\n\nexport default Component;\n","import {JigsawComponents} from \"dd-lib\";\nimport React from \"react\";\nimport Component from \"../../components/component\";\n\ninterface Props {\n  handleComponentDropEnd: (item: any, dropResult: any) => any;\n}\n\nconst RenderJigsawComponents: React.FC<Props> = ({handleComponentDropEnd}) => {\n  const components = [\n    {\n      Element: (\n        <Component\n          name={JigsawComponents.Swiper}\n          onEnd={handleComponentDropEnd}\n        >\n          {JigsawComponents.Swiper}\n        </Component>\n      ),\n    },\n    {\n      Element: (\n        <Component name={JigsawComponents.Title} onEnd={handleComponentDropEnd}>\n          {JigsawComponents.Title}\n        </Component>\n      ),\n    },\n    {\n      Element: (\n        <Component name={JigsawComponents.Block} onEnd={handleComponentDropEnd}>\n          {JigsawComponents.Block}\n        </Component>\n      ),\n    },\n    {\n      Element: (\n        <Component name={JigsawComponents.Line} onEnd={handleComponentDropEnd}>\n          {JigsawComponents.Line}\n        </Component>\n      ),\n    },\n  ];\n\n  return (\n    <div>\n      {components.map((item, index) => (\n        <div key={index}>{item.Element}</div>\n      ))}\n    </div>\n  );\n};\n\nexport default RenderJigsawComponents;\n","import React from \"react\";\nimport {DragSourceMonitor, useDrag} from \"react-dnd\";\nimport style from \"./index.module.css\";\n\ninterface Props {\n  name: string;\n  onEnd: (item: any, dropResult: any) => any;\n}\n\nconst Element: React.FC<Props> = (props) => {\n  const [, drag] = useDrag({\n    item: {name: props.name, type: props.name},\n    end: (item: {name: string} | undefined, monitor: DragSourceMonitor) => {\n      const dropResult = monitor.getDropResult();\n      if (item && dropResult) {\n        props.onEnd(item, dropResult);\n      }\n    },\n    collect: (monitor) => ({\n      isDragging: monitor.isDragging(),\n    }),\n  });\n\n  return (\n    <div ref={drag} className={style[\"component\"]}>\n      <button className={style[\"btn\"]}>{props.children}</button>\n    </div>\n  );\n};\n\nexport default Element;\n","import {JigsawElements} from \"dd-lib\";\nimport React from \"react\";\nimport Element from \"../../components/element\";\n\ninterface Props {\n  handleElementDropEnd: (item: any, dropResult: any) => any;\n}\n\nconst RenderJigsawElement: React.FC<Props> = ({handleElementDropEnd}) => {\n  const elements = [\n    {\n      Element: (\n        <Element name={JigsawElements.Banner} onEnd={handleElementDropEnd}>\n          {JigsawElements.Banner}\n        </Element>\n      ),\n    },\n    {\n      Element: (\n        <Element name={JigsawElements.Card} onEnd={handleElementDropEnd}>\n          {JigsawElements.Card}\n        </Element>\n      ),\n    },\n    {\n      Element: (\n        <Element name={JigsawElements.Goods} onEnd={handleElementDropEnd}>\n          {JigsawElements.Goods}\n        </Element>\n      ),\n    },\n    {\n      Element: (\n        <Element name={JigsawElements.Text} onEnd={handleElementDropEnd}>\n          {JigsawElements.Text}\n        </Element>\n      ),\n    },\n  ];\n\n  return (\n    <div>\n      {elements.map((item, index) => (\n        <div key={index}>{item.Element}</div>\n      ))}\n    </div>\n  );\n};\n\nexport default RenderJigsawElement;\n","import {JigsawElementsFormType} from \"dd-lib\";\nimport React, {useEffect, useState} from \"react\";\nimport style from \"./index.module.css\";\n\ninterface Props {\n  data: JigsawElementsFormType[\"BannerForm\"];\n  onSubmit: (data: JigsawElementsFormType[\"BannerForm\"]) => any;\n}\n\nconst FormBanner: React.FC<Props> = (props) => {\n  const [form, setForm] = useState(props.data);\n\n  useEffect(() => {\n    setForm(props.data);\n    return () => setForm({} as any);\n  }, [props.data]);\n\n  const handleChange = (key: string) => (event: any) =>\n    setForm({\n      ...form,\n      [key]: event.target.value,\n    });\n\n  const handleSubmit = () => {\n    props.onSubmit(form);\n  };\n\n  return (\n    <div className='form'>\n      <div className={style[\"form-cell\"]}>\n        <div className={style[\"form-label\"]}>标题</div>\n        <input\n          type='text'\n          className={style[\"form-value\"]}\n          value={form.title}\n          placeholder='请输入标题'\n          onChange={handleChange(\"title\")}\n        />\n      </div>\n      <div className={style[\"form-cell\"]}>\n        <div className={style[\"form-label\"]}>描述</div>\n        <input\n          type='text'\n          className={style[\"form-value\"]}\n          value={form.desc}\n          placeholder='请输入描述'\n          onChange={handleChange(\"desc\")}\n        />\n      </div>\n      <div className={style[\"form-cell\"]}>\n        <div className={style[\"form-label\"]}>图片</div>\n        <input\n          type='text'\n          className={style[\"form-value\"]}\n          value={form.img}\n          placeholder='请输入图片'\n          onChange={handleChange(\"img\")}\n        />\n      </div>\n      <div className={style[\"form-cell\"]}>\n        <div className={style[\"form-label\"]}>链接</div>\n        <input\n          type='text'\n          className={style[\"form-value\"]}\n          value={form.link}\n          placeholder='请输入链接'\n          onChange={handleChange(\"link\")}\n        />\n      </div>\n\n      <button className={style[\"submit\"]} onClick={handleSubmit}>\n        确定\n      </button>\n    </div>\n  );\n};\n\nexport default FormBanner;\n","import {JigsawElementsFormType} from \"dd-lib\";\nimport React, {useState, useEffect} from \"react\";\nimport style from \"./index.module.css\";\n\ninterface Props {\n  data: JigsawElementsFormType[\"CardForm\"];\n  onSubmit: (data: JigsawElementsFormType[\"CardForm\"]) => any;\n}\n\nconst FormCard: React.FC<Props> = (props) => {\n  const [form, setForm] = useState(props.data);\n\n  useEffect(() => {\n    setForm(props.data);\n    return () => setForm({} as any);\n  }, [props.data]);\n\n  const handleChange = (key: string) => (event: any) =>\n    setForm({\n      ...form,\n      [key]: event.target.value,\n    });\n\n  const handleSubmit = () => {\n    props.onSubmit(form);\n  };\n\n  return (\n    <div className='form'>\n      <div className={style[\"form-cell\"]}>\n        <div className={style[\"form-label\"]}>标题</div>\n        <input\n          type='text'\n          className={style[\"form-value\"]}\n          value={form.vipCardId}\n          placeholder='请输入会员卡id'\n          onChange={handleChange(\"vipCardId\")}\n        />\n      </div>\n      <div className={style[\"form-cell\"]}>\n        <div className={style[\"form-label\"]}>标题</div>\n        <input\n          type='text'\n          className={style[\"form-value\"]}\n          value={form.title}\n          placeholder='请输入标题'\n          onChange={handleChange(\"title\")}\n        />\n      </div>\n      <div className={style[\"form-cell\"]}>\n        <div className={style[\"form-label\"]}>描述</div>\n        <input\n          type='text'\n          className={style[\"form-value\"]}\n          value={form.desc}\n          placeholder='请输入描述'\n          onChange={handleChange(\"desc\")}\n        />\n      </div>\n      <div className={style[\"form-cell\"]}>\n        <div className={style[\"form-label\"]}>图片</div>\n        <input\n          type='text'\n          className={style[\"form-value\"]}\n          value={form.img}\n          placeholder='请输入图片'\n          onChange={handleChange(\"img\")}\n        />\n      </div>\n      <div className={style[\"form-cell\"]}>\n        <div className={style[\"form-label\"]}>链接</div>\n        <input\n          type='text'\n          className={style[\"form-value\"]}\n          value={form.link}\n          placeholder='请输入链接'\n          onChange={handleChange(\"link\")}\n        />\n      </div>\n\n      <button className={style[\"submit\"]} onClick={handleSubmit}>\n        确定\n      </button>\n    </div>\n  );\n};\n\nexport default FormCard;\n","import {JigsawElementsFormType} from \"dd-lib\";\nimport React, {useState, useEffect} from \"react\";\nimport style from \"./index.module.css\";\n\ninterface Props {\n  data: JigsawElementsFormType[\"GoodsForm\"];\n  onSubmit: (data: JigsawElementsFormType[\"GoodsForm\"]) => any;\n}\n\nconst FormGoods: React.FC<Props> = (props) => {\n  const [form, setForm] = useState(props.data);\n\n  useEffect(() => {\n    setForm(props.data);\n    return () => setForm({} as any);\n  }, [props.data]);\n\n  const handleChange = (key: string) => (event: any) =>\n    setForm({\n      ...form,\n      [key]: event.target.value,\n    });\n\n  const handleSubmit = () => {\n    props.onSubmit(form);\n  };\n\n  return (\n    <div className='form'>\n      <div className={style[\"form-cell\"]}>\n        <div className={style[\"form-label\"]}>标题</div>\n        <input\n          type='text'\n          className={style[\"form-value\"]}\n          value={form.goodsId}\n          placeholder='请输入商品id'\n          onChange={handleChange(\"goodsId\")}\n        />\n      </div>\n      <div className={style[\"form-cell\"]}>\n        <div className={style[\"form-label\"]}>标题</div>\n        <input\n          type='text'\n          className={style[\"form-value\"]}\n          value={form.title}\n          placeholder='请输入标题'\n          onChange={handleChange(\"title\")}\n        />\n      </div>\n      <div className={style[\"form-cell\"]}>\n        <div className={style[\"form-label\"]}>描述</div>\n        <input\n          type='text'\n          className={style[\"form-value\"]}\n          value={form.desc}\n          placeholder='请输入描述'\n          onChange={handleChange(\"desc\")}\n        />\n      </div>\n      <div className={style[\"form-cell\"]}>\n        <div className={style[\"form-label\"]}>图片</div>\n        <input\n          type='text'\n          className={style[\"form-value\"]}\n          value={form.img}\n          placeholder='请输入图片'\n          onChange={handleChange(\"img\")}\n        />\n      </div>\n      <div className={style[\"form-cell\"]}>\n        <div className={style[\"form-label\"]}>链接</div>\n        <input\n          type='text'\n          className={style[\"form-value\"]}\n          value={form.link}\n          placeholder='请输入链接'\n          onChange={handleChange(\"link\")}\n        />\n      </div>\n\n      <button className={style[\"submit\"]} onClick={handleSubmit}>\n        确定\n      </button>\n    </div>\n  );\n};\n\nexport default FormGoods;\n","import {JigsawElementsFormType} from \"dd-lib\";\nimport React, {useState, useEffect} from \"react\";\nimport style from \"./index.module.css\";\n\ninterface Props {\n  data: JigsawElementsFormType[\"TextForm\"];\n  onSubmit: (data: JigsawElementsFormType[\"TextForm\"]) => any;\n}\n\nconst FormText: React.FC<Props> = (props) => {\n  const [form, setForm] = useState(props.data);\n\n  useEffect(() => {\n    setForm(props.data);\n    return () => setForm({} as any);\n  }, [props.data]);\n\n  const handleChange = (key: string) => (event: any) =>\n    setForm({\n      ...form,\n      [key]: event.target.value,\n    });\n\n  const handleSubmit = () => {\n    props.onSubmit(form);\n  };\n\n  return (\n    <div className='form'>\n      <div className={style[\"form-cell\"]}>\n        <div className={style[\"form-label\"]}>标题</div>\n        <input\n          type='text'\n          className={style[\"form-value\"]}\n          value={form.title}\n          placeholder='请输入标题'\n          onChange={handleChange(\"title\")}\n        />\n      </div>\n      <div className={style[\"form-cell\"]}>\n        <div className={style[\"form-label\"]}>描述</div>\n        <input\n          type='text'\n          className={style[\"form-value\"]}\n          value={form.desc}\n          placeholder='请输入描述'\n          onChange={handleChange(\"desc\")}\n        />\n      </div>\n      <button className={style[\"submit\"]} onClick={handleSubmit}>\n        确定\n      </button>\n    </div>\n  );\n};\n\nexport default FormText;\n","import {JigsawElements, JigsawElementsForm} from \"dd-lib\";\nimport React from \"react\";\nimport FormBanner from \"../../components/form/banner\";\nimport FormCard from \"../../components/form/card\";\nimport FormGoods from \"../../components/form/goods\";\nimport FormText from \"../../components/form/text\";\n\ninterface Props {\n  type: JigsawElements;\n  data: any; // TODO:  通过 JigsawElements 限值 data\n  onSubmit: (form: JigsawElementsForm) => any;\n}\n\nconst JigsawElementForm: React.FC<Props> = ({data, type, onSubmit}) => {\n  console.log(data);\n  return (\n    <div>\n      {type === JigsawElements.Banner && (\n        <FormBanner data={data} onSubmit={onSubmit} />\n      )}\n      {type === JigsawElements.Card && (\n        <FormCard data={data} onSubmit={onSubmit} />\n      )}\n      {type === JigsawElements.Goods && (\n        <FormGoods data={data} onSubmit={onSubmit} />\n      )}\n      {type === JigsawElements.Text && (\n        <FormText data={data} onSubmit={onSubmit} />\n      )}\n    </div>\n  );\n};\n\nexport default JigsawElementForm;\n","import {JigsawElementBase, JigsawElementsForm, swap} from \"dd-lib\";\nimport immer from \"immer\";\nimport get from \"lodash/get\";\nimport React, {useEffect, useMemo, useState} from \"react\";\nimport {DndProvider} from \"react-dnd\";\nimport {HTML5Backend} from \"react-dnd-html5-backend\";\nimport ReciverMain from \"../../components/reciver-main\";\nimport {JigsawComponentsRecive, JigsawElements} from \"../../constant\";\nimport {useCache} from \"../../utils/cache\";\nimport {Iframe} from \"../../utils/postmessage\";\nimport style from \"./index.module.css\";\nimport RenderJigsawComponents from \"./jigsaw-components\";\nimport RenderJigsawElement from \"./jigsaw-elements\";\nimport JigsawElementForm from \"./jigsaw-elements-form\";\n\nconst iframe = new Iframe();\n\nconst Jigsaw = () => {\n  const [arr, setArr] = useState<JigsawElementBase[]>([]);\n\n  const [edit, setEdit] = useState(\n    {} as {\n      elementIndex: number;\n      componentIndex: number;\n      elementType: JigsawElements;\n    }\n  );\n\n  const editData = useMemo(() => {\n    return get(\n      arr[edit.componentIndex],\n      `value[${edit.elementIndex}].value`,\n      {}\n    );\n  }, [arr, edit.componentIndex, edit.elementIndex]);\n\n  const cache = useCache<JigsawElementBase>(arr);\n\n  useEffect(() => {\n    setArr(cache.data);\n  }, [cache.data]);\n\n  useEffect(() => {\n    iframe.find(\"livePage\");\n  }, []);\n\n  useEffect(() => {\n    iframe.postData(arr);\n  }, [arr]);\n\n  const handleComponentDropEnd = (item: any, dropResult: any) => {\n    const newArr = immer(arr, (draft) => {\n      return [\n        ...draft,\n        {\n          ...item,\n          __key: new Date().getTime(),\n        },\n      ];\n    });\n\n    setArr(newArr.filter((item) => !!item));\n  };\n\n  const handleElementDropEnd = (\n    item: {name: string; type: JigsawElements},\n    result: {index: number}\n  ) => {\n    // 如果不是被accept的元素 放下会出现 result.index === undefined\n    if (result.index === undefined) {\n      return;\n    }\n    const componentIype = arr[result.index].type;\n    const multiple = JigsawComponentsRecive[componentIype].multiple;\n\n    const newArr = immer(arr, (draft) => {\n      if (!multiple) {\n        draft[result.index].value = [\n          {\n            ...item,\n            __key: new Date().getTime(),\n            value: [],\n          },\n        ];\n        return draft;\n      }\n\n      const oldItems = arr[result.index].value || [];\n      const value = [\n        ...oldItems,\n        {\n          ...item,\n          __key: new Date().getTime(),\n          value: [],\n        },\n      ];\n      draft[result.index].value = value;\n      return draft;\n    });\n\n    setArr(newArr.filter((item) => !!item));\n  };\n\n  const handleElementSelect = (params: {\n    elementIndex: number;\n    elementType: JigsawElements;\n    componentIndex: number;\n  }) => {\n    setEdit({\n      componentIndex: params.componentIndex,\n      elementIndex: params.elementIndex,\n      elementType: params.elementType,\n    });\n  };\n\n  const handleComponentMove = (params: {\n    componentIndex: number;\n    dragIndex: number;\n    hoverIndex: number;\n  }) => {\n    const {dragIndex, hoverIndex} = params;\n    if (typeof dragIndex !== \"number\" || typeof hoverIndex !== \"number\") {\n      return;\n    }\n    setArr(swap(arr, dragIndex, hoverIndex));\n  };\n\n  const handleElementMove = (params: {\n    componentIndex: number;\n    dragIndex: number;\n    hoverIndex: number;\n  }) => {\n    const {componentIndex, dragIndex, hoverIndex} = params;\n\n    if (typeof dragIndex !== \"number\" || typeof hoverIndex !== \"number\") {\n      return;\n    }\n\n    setArr(\n      immer(arr, (draft) => {\n        draft[componentIndex].value = swap(\n          arr[componentIndex].value,\n          dragIndex,\n          hoverIndex\n        );\n      })\n    );\n  };\n\n  const handleSubmitElementValue = (form: JigsawElementsForm) => {\n    setArr(\n      immer(arr, (draft) => {\n        draft[edit.componentIndex].value[edit.elementIndex].value = form;\n      })\n    );\n  };\n\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <div className={style[\"page\"]}>\n        <div className={style[\"layout\"]}>\n          <div className={style[\"operater\"]}>\n            <button className={style[\"reset\"]} onClick={cache.clear}>\n              重置\n            </button>\n            <div className={style[\"components\"]}>\n              <RenderJigsawComponents\n                handleComponentDropEnd={handleComponentDropEnd}\n              />\n            </div>\n            <div className={style[\"elements\"]}>\n              <RenderJigsawElement\n                handleElementDropEnd={handleElementDropEnd}\n              />\n            </div>\n          </div>\n\n          <div className={style[\"preview\"]}>\n            <div className={style[\"json\"]}>\n              <ReciverMain\n                value={arr}\n                onElementMove={handleElementMove}\n                onElementSelect={handleElementSelect}\n                onComponentMove={handleComponentMove}\n              />\n            </div>\n          </div>\n          <div className={style[\"form\"]}>\n            <JigsawElementForm\n              data={editData}\n              type={edit.elementType}\n              onSubmit={handleSubmitElementValue}\n            />\n          </div>\n          <div className={style[\"livePage\"]}>\n            <iframe\n              id='livePage'\n              src='https://lowinc.github.io/mobile/index.html'\n              title='livePage'\n              className={style[\"iframe\"]}\n            />\n          </div>\n        </div>\n      </div>\n    </DndProvider>\n  );\n};\n\nexport default Jigsaw;\n","export class Iframe {\n  private iframe!: any;\n\n  private postMessage = (action: {type: string; payload: any}) => {\n    if (this.iframe) {\n      this.iframe.contentWindow.postMessage(action, \"*\");\n      return;\n    }\n    console.error(\"没有找到iframe\");\n  };\n\n  find = (id: string) => {\n    this.iframe = document.getElementById(id);\n  };\n\n  postData = (payload: any) => {\n    this.postMessage({\n      type: \"UPDATE_DATA\",\n      payload,\n    });\n  };\n\n  postEvent = (payload: any) => {\n    this.postMessage({\n      type: \"UPDATE_EVENT\",\n      payload,\n    });\n  };\n}\n","import React from \"react\";\n\nimport Jigsaw from \"./pages/jigsaw\";\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Jigsaw></Jigsaw>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}